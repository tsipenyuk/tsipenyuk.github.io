<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arseniy Tsipenyuk</title>
    <link>http://tsipenyuk.github.io/</link>
    <description>Recent content on Arseniy Tsipenyuk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 26 Mar 2022 00:00:00 +0100</lastBuildDate><atom:link href="http://tsipenyuk.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Changing keybindings in Slack using Karabiner Elements</title>
      <link>http://tsipenyuk.github.io/posts/changing_keybindings_in_slack_using_karabiner_elements/</link>
      <pubDate>Sat, 26 Mar 2022 00:00:00 +0100</pubDate>
      
      <guid>http://tsipenyuk.github.io/posts/changing_keybindings_in_slack_using_karabiner_elements/</guid>
      <description>I constantly keep using the false shortcut for code in Slack and Confluence (Option+Shift+C in Slack, Option+Shift+M in Confluence).
Apparently there is no native key switching in either of these apps to make the shortcut the same.
I ended up using Karabiner-Elements to map my Option+Shift+C to Option+Ship+M, but only if Slack is my foremost window using the following steps.
1. Install Karabiner. Open it to make sure that it works.</description>
    </item>
    
    <item>
      <title>Looping over lines in bash</title>
      <link>http://tsipenyuk.github.io/posts/looping_over_lines_in_bash/</link>
      <pubDate>Tue, 22 Mar 2022 00:00:00 +0100</pubDate>
      
      <guid>http://tsipenyuk.github.io/posts/looping_over_lines_in_bash/</guid>
      <description>Recently, I had to write a script that finds files that end in .json but not in examples.json, and renames them. Here is a relevant part of the shell script that uses sed.
find . -type f \( -iname &amp;#34;*.json&amp;#34; ! -iname &amp;#34;*.examples.json&amp;#34; \) | while read -r line do  out=$(sed &amp;#39;s/.json/.d.ts/g&amp;#39; &amp;lt;&amp;lt;&amp;lt; &amp;#34;$line&amp;#34;)  echo &amp;#34;$lineconverted to $out&amp;#34; done In another place, I wanted to create a minimal custom CHANGELOG that prints git commits that mention category cool-category in their message (e.</description>
    </item>
    
    <item>
      <title>Setting up ox-hugo</title>
      <link>http://tsipenyuk.github.io/posts/setting-up-ox-hugo/</link>
      <pubDate>Sun, 20 Mar 2022 22:13:00 +0100</pubDate>
      
      <guid>http://tsipenyuk.github.io/posts/setting-up-ox-hugo/</guid>
      <description>To set up ox-hugo, I followed the official quick start page.
On MacOS:
brew install hugo brew install go mkdir blog &amp;amp;&amp;amp; cd blog For theme, I could not get hugo mod init to work, so I used the git clone approach. As of the time of writing, I have used the hello-friend-ng theme, which recommends the github submodule installation:
git submodule add https://github.com/rhazdon/hugo-theme-hello-friend-ng.git themes/hello-friend-ng To conclude the theme setup, I have copied the recommended settings to my config.</description>
    </item>
    
  </channel>
</rss>
